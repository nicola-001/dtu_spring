<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyarch.mapper.device.DeviceMapper">


    <!--
        从【用户设备关联表】找出当前用户能访问的设备，
        拿设备编号去【设备信息表】（device_info）查设备的基本信息，
        再去【设备连接配置表】（device_connection）查通信参数（可能没有，所以用 LEFT JOIN）
    -->
    <select id="selectPageVo" resultType="com.easyarch.vo.devicesInfo.DeviceDec">
        SELECT dc.baud_rate AS baudRate,
        dc.id AS id,
        dc.data_bits AS dataBits,
        dc.stop_bits AS stopBits,
        dc.parity AS parity,
        dc.protocol_type AS protocolType,
        dc.updated_at AS updateTime,
        dc.created_at AS createTime,

        di.device_type AS deviceType,
        di.cumulative_usage AS cumulativeUsage,
        di.device_description AS deviceDescription,
        di.device_code AS deviceCode,
        di.device_name AS deviceName,
        di.status AS status,
        di.installation_location AS installationLocation
        FROM user_device_relation udr
        INNER JOIN device_info di
        ON udr.device_code = di.device_code
        LEFT JOIN device_connection dc
        ON di.device_code = dc.device_code
        <where>
            udr.user_id = #{userId}

            <if test="type != null and type != ''">
                AND di.device_type = #{type}
            </if>

            <if test="deviceName != null and deviceName != ''">
                AND di.device_name LIKE CONCAT('%', #{deviceName}, '%')
            </if>

            <if test="status != null and status != ''">
                AND di.status = #{status}
            </if>
        </where>
    </select>


    <!--
        根据设备编号获取设备详情信息
    -->
    <select id="selectByDeviceCode" resultType="com.easyarch.vo.devicesInfo.DeviceDec">
        select di.device_name           as deviceName,
               di.device_code           as deviceCode,
               di.device_type           as deviceType,
               di.cumulative_usage      as cumulativeUsage,
               di.installation_location as installationLocation,
               di.status                as status,
               di.device_description    as deviceDescription,
               di.updated_at            as updatedAt,
               dc.baud_rate             as baudRate,
               dc.data_bits             as dataBits,
               dc.stop_bits             as stopBits,
               dc.parity                as parity,
               dc.protocol_type         as protocolType
        from device_info as di
                 left join device_connection as dc
                           on di.device_code = dc.device_code

        where di.device_code = #{deviceCode}
    </select>

    <!--
        插入设备信息
    -->

    <!--  插入device_info表中的字段-->
    <insert id="insertDeviceInfo" parameterType="com.easyarch.vo.devicesInfo.NewDevice"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO device_info (device_code,
                                 device_name,
                                 device_description,
                                 device_type,
                                 status,
                                 cumulative_usage,
                                 owner_id,
                                 created_by,
                                 installation_location)
        VALUES (#{deviceCode},
                #{deviceName},
                #{deviceDescription},
                #{deviceType},
                #{status},
                #{cumulativeUsage},
                #{ownerId},
                #{createdBy},
                #{installationLocation})
    </insert>

    <!--
        插入device_connection表中的字段
        注意：
            useGeneratedKeys=true：让 MyBatis 在插入数据后，把数据库生成的主键自动写回 Java 对象中
    -->
    <insert id="insertDeviceConnection" parameterType="com.easyarch.vo.devicesInfo.NewDevice" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO device_connection
        (device_code,
         baud_rate,
         data_bits,
         stop_bits,
         parity,
         protocol_type,
         ip_address,
         port,
         sim_card_number)
        VALUES (#{deviceCode},
                #{baudRate},
                #{dataBits},
                #{stopBits},
                #{parity},
                #{protocolType},
                #{ipAddress},
                #{port},
                #{simCardNumber})
    </insert>
    <!--  绑定用户与设备关系 -->
    <insert id="insertUserDeviceRelation" parameterType="com.easyarch.entity.UserDeviceRelation">
        INSERT INTO user_device_relation
            (user_id, device_code, assigned_by, assigned_at)
        VALUES (#{userId}, #{deviceCode}, #{assignedBy}, #{assignedAt})
    </insert>

    <!--
        更新设备信息
    -->
    <!--   更新device_info表中的字段 -->
    <update id="updateDeviceInfo" parameterType="com.easyarch.vo.devicesInfo.UpdateDevice">
        UPDATE device_info
        SET device_name           = #{deviceName},
            device_description    = #{deviceDescription},
            status                = #{status},
            installation_location = #{installationLocation}
        WHERE device_code = #{deviceCode}
    </update>
    <!--   更新device_connection表中的字段 -->
    <update id="updateDeviceConnection" parameterType="com.easyarch.vo.devicesInfo.UpdateDevice">
        UPDATE device_connection
        SET baud_rate       = #{baudRate},
            data_bits       = #{dataBits},
            stop_bits       = #{stopBits},
            parity          = #{parity},
            protocol_type   = #{protocolType},
            ip_address      = #{ipAddress},
            port            = #{port},
            sim_card_number = #{simCardNumber}
        WHERE device_code = #{deviceCode}
    </update>

    <!--    根据设备编号删除设备信息-->
    <delete id="removeByDeviceCode" parameterType="String">
        DELETE
        FROM device_info
        WHERE device_code = #{deviceCode}
    </delete>
</mapper>